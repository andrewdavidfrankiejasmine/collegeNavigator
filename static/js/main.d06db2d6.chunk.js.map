{"version":3,"sources":["components/firebase.js","components/SchoolDetails.js","components/Bookmark.js","components/School.js","components/Search.js","components/Nav.js","components/AddSchool.js","components/Notes.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SchoolDetails","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","displayDetails","_this$props$schoolMor","schoolMoreInfo","bestPhoto","name","contact","location","description","url","react_default","a","createElement","react","className","onClick","closeModal","ref","closeModalButton","tabIndex","aria-label","undefined","src","concat","prefix","suffix","alt","formattedAddress","facebook","target","rel","href","facebookName","twitter","formattedPhone","React","createRef","current","focus","modalStatus","Component","Bookmark","handleClick","bookmark","database","once","response","data","val","bookmarkArray","item","push","dbKey","id","forEach","school","bookmarkId","setState","ariaBookmark","remove","addBookmark","state","_this2","length","_this3","School","setBookmarkState","moreInfo","moreInfoID","axios","get","params","client_id","clientID","keyCounter","client_secret","clientSecret","v","then","res","venue","catch","error","status","handleChange","e","userSearch","value","schoolsList","filter","toLowerCase","indexOf","bookmarked","aria-live","react_scroll_up_button","AnimationDuration","ShowAtPosition","style","fill","height","width","right","border","background","htmlFor","type","placeholder","onChange","Array","isArray","map","schoolName","address","city","country","key","aria-hidden","components_Bookmark","components_SchoolDetails","Search","apiCall","near","userInput","categoryId","institution","radius","intent","limit","result","RegEx","filteredList","venues","categories","shortName","test","category","defineProperty","handleSubmit","swal","title","text","icon","jump","duration","offset","a11y","preventDefault","selectSchoolId","onSubmit","checked","components_School","userSelectSchoolId","Nav","react_router_dom","to","AddSchool","uuid","v4","note","Notes","event","dbRef","selectedId","userName","child","set","userAddress","userCategory","userNote","editNote","found","bookmarkList","find","modalOpen","removeBookmark","handleScroll","focusHere","on","updateBookmark","action","components_AddSchool","Footer","App","components_Nav","react_router","exact","path","component","components_Footer","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d06db2d6.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA4yDbpMJo_81wiX8tvikLe7fkrVeJuo4w\",\n  authDomain: \"collegenav-2e04d.firebaseapp.com\",\n  databaseURL: \"https://collegenav-2e04d.firebaseio.com\",\n  projectId: \"collegenav-2e04d\",\n  storageBucket: \"collegenav-2e04d.appspot.com\",\n  messagingSenderId: \"261170856716\",\n  appId: \"1:261170856716:web:a7953ec167b2a338\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, { Component, Fragment } from 'react';\n\nclass SchoolDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.closeModalButton = React.createRef();\n  }\n\n  componentDidMount() {\n    // gives focus to the button\n    this.closeModalButton.current.focus();\n  }\n\n  // display details function\n  displayDetails = () => {\n    const { bestPhoto, name, contact, location, description, url } = this.props.schoolMoreInfo;\n\n    return (\n      <Fragment>\n        <div className=\"detailsOverlay\" />\n\n        <div className=\"detailsModal\">\n          <div className=\"detailsFlex\">\n            {/* close modal button */}\n            <button\n              onClick={this.props.closeModal}\n              className=\"closeButton\"\n              ref={this.closeModalButton}\n              tabIndex=\"5\"\n            >\n              <i className=\"fas fa-times\" aria-label=\"close modal\" />\n            </button>\n\n            {/* display a photo if available */}\n            {bestPhoto !== undefined ? (\n              <div className=\"imgWrapper\">\n                <img\n                  src={`${bestPhoto.prefix}400x400${bestPhoto.suffix}`}\n                  alt={`${name}`}\n                  tabIndex=\"5\"\n                />\n              </div>\n            ) : null}\n\n            <div className=\"smallInfoWrapper\">\n              <p tabIndex=\"5\">{name}</p>\n              <p tabIndex=\"5\">{location.formattedAddress}</p>\n\n              {/* display facebook link if available */}\n              {contact.facebook ? (\n                <p>\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={`https://www.facebook.com/${contact.facebook}`}\n                    tabIndex=\"5\"\n                  >\n                    <i className=\"fab fa-facebook\" aria-label=\"Go to facebook\" />{' '}\n                    {contact.facebookName}\n                  </a>\n                </p>\n              ) : null}\n\n              {/* display twitter link if available */}\n              {contact.twitter ? (\n                <p>\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={`https://twitter.com/${contact.twitter}`}\n                    tabIndex=\"5\"\n                  >\n                    <i className=\"fab fa-twitter\" aria-label=\"Go to twitter\" /> @{contact.twitter}\n                  </a>\n                </p>\n              ) : null}\n\n              {/* display website link if available */}\n              {url !== undefined ? (\n                <p>\n                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={url} tabIndex=\"5\">\n                    <i className=\"fas fa-link\" aria-label=\"Go to website\" /> Website\n                  </a>\n                </p>\n              ) : null}\n\n              {/* display address if available */}\n              {contact.formattedAddress ? (\n                <p tabIndex=\"5\">\n                  <span>\n                    <i className=\"fas fa-phone\" />\n                  </span>{' '}\n                  {contact.formattedPhone}\n                </p>\n              ) : null}\n            </div>\n\n            {/* display description if available */}\n            <div className=\"descriptionWrapper\">\n              {description !== undefined ? <p tabIndex=\"5\">{description}</p> : null}\n            </div>\n            {/* end of wrappers */}\n          </div>\n        </div>\n      </Fragment>\n    );\n  };\n\n  render() {\n    return <div className={`modalWrapper ${this.props.modalStatus}`}>{this.displayDetails()}</div>;\n  }\n}\n\nexport default SchoolDetails;\n","import React, { Component } from 'react';\nimport firebase from 'firebase';\n\nclass Bookmark extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // bookmark class name for non-bookmarked schools\n      bookmark: 'far fa-bookmark',\n      // corresponding aria-label for bookmark\n      ariaBookmark: 'item not bookmarked'\n    };\n  }\n\n  componentDidMount() {\n    const dbRef = firebase.database().ref();\n    // takes snapshot of firebase\n    dbRef.once('value', response => {\n      const data = response.val();\n      const bookmarkArray = [];\n\n      // loop through the returned data and push the keys of each firebase item to an array\n      for (let item in data) {\n        bookmarkArray.push({\n          id: data[item].id\n        });\n      }\n\n      // if there is at least one entry in firebase compares if any schools were previously saved into firebase against stored search results\n      if (bookmarkArray !== null && bookmarkArray.length > 0) {\n        bookmarkArray.forEach(school => {\n          // matches have the bookmark icon listed as bookmarked (ie. filled in)\n          if (school.id === this.props.bookmarkId) {\n            this.setState({\n              bookmark: 'fas fa-bookmark',\n              ariaBookmark: 'item bookmarked'\n            });\n          }\n        });\n      }\n    });\n  }\n\n  // handle click for adding a bookmark\n  handleClick = bookmark => {\n    // check if the search item returned was bookmarked or not\n    if (bookmark === 'fas fa-bookmark') {\n      // if it is not bookmarked, be able to add it\n      const dbRef = firebase.database().ref();\n      dbRef.once('value', response => {\n        const data = response.val();\n        const bookmarkArray = [];\n\n        for (let item in data) {\n          bookmarkArray.push({\n            dbKey: item,\n            id: data[item].id\n          });\n        }\n\n        bookmarkArray.forEach(school => {\n          if (school.id === this.props.bookmarkId) {\n            this.setState({\n              bookmark: 'far fa-bookmark',\n              ariaBookmark: 'item not bookmarked'\n            });\n            const dbRemove = firebase.database().ref(school.dbKey);\n            dbRemove.remove();\n          }\n        });\n      });\n    } else if (bookmark === 'far fa-bookmark') {\n      // if it is bookmarked, remove the bookmark\n      this.setState({\n        bookmark: 'fas fa-bookmark',\n        ariaBookmark: 'item bookmarked'\n      });\n      this.props.addBookmark(this.props.bookmarkId);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"bookmarkPosition\">\n        <button className=\"bookmark\" onClick={() => this.handleClick(this.state.bookmark)}>\n          {/* icon changes based on toggle in state of class name */}\n          <i\n            className={`${this.state.bookmark} bookmarkIcon`}\n            aria-label={this.state.ariaBookmark}\n          />\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Bookmark;\n","import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport { CircleArrow as ScrollUpButton } from 'react-scroll-up-button'; //Add this line Here\n\nimport SchoolDetails from './SchoolDetails.js';\nimport Bookmark from './Bookmark.js';\n\nclass School extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // state of the bookmark false = doesn't exist in firebase, true = exist in firebase\n      bookmarked: false,\n      // object returned from the more info api call\n      schoolMoreInfo: {},\n      // modal class status of close or open to display the modal\n      modalStatus: 'close',\n      // array of keys to loop through for more details api call as limited to 50\n      clientID: [\n        'JYPGSEYBVO44BBH553GNVMI1OCUCDFTFZUS2H0X5JLMCMOVY',\n        'FIQECXQNZC4NEV00SFTF3535BMLFZSUW2XXHXEERFGTTCJDG',\n        'CJ4XSVLTY1JQ3SPHZV00JRFHCFAIXO5Y1HAASCOPGXG3URXV',\n        'MATE2LSJXUO3JS3LXR1NMMTSUE1PGF15ADCMGRUA23UCVVDM',\n        'QZIM15RPPGTGIA5QB0NA3ZMK3UUOSR1GU12SJLQG1MOYRNPA',\n        'NJZBAFQGJBCPNIDWS2FJ4OC1SCXB34QCAFPVJDDBKU2GANFO',\n        'VGQEXUC1OBLYR2OGNSCLDDA0Z3V1XYT35BVUR5KXOZ2SER5A',\n        'WWHHWA0S4GFHODY54K2FZS5XP1YROPRBPDRVG31MUMNGKDMM',\n        '2NFNP2CN0KXN5G0INYBVQZOZUIC0D3XT0FOZXZRPVQN4GZZA',\n        'VMT1CVWVRRTVEEOJWSER3UPCWUKR11INNAGCYRFDVGNCT4Y5',\n        'SUXPJ05HNSW0NCIBMJJ2SHHA3DJMYBLM4FVFPOG5Y1TA3VC1',\n        'SSZTT4XQDRSNJDAJVQTNGBUSM1ABD32WT1VG3C5Z1XND33H2',\n        'EI1UC5BD2LNXQGTNN4SW0DZMDI5W3QNQ3A4ZNCEWP54ZSY0JClient'\n      ],\n\n      clientSecret: [\n        'XBVDWZV2LUQS3RUWTMJJQVJMKZY5HACXHKCGT4ZXVHHXX5K3',\n        'EQZ42P3U5DO5PVOQVKG4AQFEDUAPVQ4ZTIOEDDLMER2EJFJX',\n        'WUABEMQMIZBR2LSKFURNG4NY2IF10CDAPAX0QSWWYGFGV2ZP',\n        'SZRKDMSYSFHU23FQLJR4VXRLHBBQQC1MLJCKSACB5A2EVGPS',\n        'VUM2WEQ55KAX3405NTCPFR145DKCD3FUS5YM0GWNJYXEJGA2',\n        'HBFVKQJJDP4HLH0F4DG15DMXRV1GMOMH0LTIFSMFMYYLGNFB',\n        '3TNU5JJ4EPOKSBEHMLUXJTXBUJTFNRYG5EO203ITHUAHOO5C',\n        'DV2P4N505ZWOEGEZQUCDQ0FV5OJ3HDW1RVL44VQQYCNC13QW',\n        '5EWVDITYF2KCEB4ZHY32TN0XV31ONYEDXX5A1YMPDBMBHLIC',\n        '3XQL24IHR2TIODEGQ5WH0CW03K3E2G4OCR4VAORZ23CNHZRO',\n        '0KKBUXNYC4HWALSJTL2UA0QGZJQQ5X0UOZIPK5ROL03RPPZA',\n        'KMO0VYQBDDXMGZ2QM4BJIFB2D0TB0ZMCEWE3LW1KBO2LIIH2',\n        'D50NHW2CPNKH1I3APUMVBT4XON33QK3HLW225P5N023MXL4O'\n      ],\n\n      // key counter to step through keys\n      keyCounter: 0,\n      // id that corresponds to the selected school for more info\n      moreInfoID: null,\n      // user input for filtering the school list\n      userSearch: '',\n      // list that is stored to be filtered over\n      schoolsList: []\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    // sets the state with the schools list that was passed down as prop\n    this.setState({\n      schoolsList: props.schoolsList\n    });\n  }\n\n  // calls the bookmark state from the parent component\n  addBookmark = id => {\n    this.props.setBookmarkState(id);\n  };\n\n  // changes the modal class name to close it\n  closeModal = () => {\n    this.setState({\n      modalStatus: 'close'\n    });\n  };\n\n  // make API call for more info\n  moreInfo = id => {\n    // stores the ID in the event this moreInfo function needs to be called again from increased key count\n    this.setState({\n      moreInfoID: id\n    });\n\n    axios\n      .get(`https://api.foursquare.com/v2/venues/${id}`, {\n        params: {\n          // gets the id and secret from the state\n          client_id: this.state.clientID[this.state.keyCounter],\n          client_secret: this.state.clientSecret[this.state.keyCounter],\n          v: 20190601\n        }\n      })\n      .then(res => {\n        const schoolMoreInfo = res.data.response.venue;\n\n        this.setState({\n          // sets state with the more info returned from the api\n          schoolMoreInfo: schoolMoreInfo,\n          // changes modal class so it opens\n          modalStatus: 'open'\n        });\n      })\n      .catch(error => {\n        // if the response error is status 429\n        if (error.response.status === 429) {\n          if (this.state.keyCounter < this.state.clientID.length - 1) {\n            // increase the key counter by one step\n            this.setState(\n              {\n                keyCounter: this.state.keyCounter + 1\n              },\n              () => {\n                // call the more info function again using the key new key count in state\n                this.moreInfo(this.state.moreInfoID);\n              }\n            );\n          } else {\n            this.setState({\n              keyCounter: 0\n            });\n          }\n        }\n      });\n  };\n\n  // filter results based on change\n  handleChange = e => {\n    this.setState({\n      userSearch: e.target.value\n    });\n\n    // if the search query is empty or null reverts to the master list from props\n    if (e.target.value === '') {\n      this.setState({\n        schoolsList: this.props.schoolsList\n      });\n    } else {\n      // search the list for the string\n      const schoolsList = this.props.schoolsList.filter(school => {\n        return school.name.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1;\n      });\n\n      // sets the state with the new filtered school list\n      this.setState({\n        schoolsList\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"schoolResults wrapper\" aria-live=\"polite\">\n          {/* component imported react-scroll-up */}\n          <ScrollUpButton\n            AnimationDuration={500}\n            ShowAtPosition={350}\n            style={{\n              fill: `#073330`,\n              height: 30,\n              width: 30,\n              right: 15,\n              border: `3px solid #073330`,\n              background: `rgba(255, 255, 255, 0.848)`\n            }}\n          />\n          {/* only display the filter when a list of schools is returned */}\n          {this.props.schoolsList.length > 0 ? (\n            <div className=\"schoolsListSearchInput singleContent\">\n              <label htmlFor=\"schoolsListSearch\">Filter Search:</label>\n              <input\n                type=\"text\"\n                placeholder=\"search\"\n                name=\"userSearch\"\n                value={this.state.userSearch}\n                id=\"schoolsListSearch\"\n                className=\"schoolsListSearch\"\n                onChange={this.handleChange}\n              />\n            </div>\n          ) : null}\n\n          <ul className=\"schoolsList\" aria-live=\"polite\">\n            {/* checks if the school list is an array otherwise prints a string */}\n            {Array.isArray(this.state.schoolsList) ? (\n              this.state.schoolsList.map(school => {\n                const { id, name: schoolName, location } = school;\n                const { address, city, country } = location;\n\n                return (\n                  <li key={id} className=\"result singleContent\" tabIndex=\"0\" aria-hidden=\"false\">\n                    <p className=\"resultName\">{schoolName}</p>\n                    <p className=\"resultAddress\">\n                      {address} - {city}\n                    </p>\n                    <p className=\"resultCountry\">{country}</p>\n\n                    <Bookmark bookmarkId={id} addBookmark={this.addBookmark} />\n\n                    <button className=\"generalButton\" onClick={() => this.moreInfo(id)}>\n                      More Info\n                    </button>\n                  </li>\n                );\n              })\n            ) : (\n              // error message returned if an arrary of schools isn't returned from the API call\n              <li className=\"noResult singleContent\">\n                <p className=\"resultName\">{this.props.schoolsList}</p>\n              </li>\n            )}\n          </ul>\n        </div>\n\n        {this.state.modalStatus === 'open' ? (\n          // modal component to be displayed\n          <SchoolDetails\n            schoolMoreInfo={this.state.schoolMoreInfo}\n            modalStatus={this.state.modalStatus}\n            closeModal={this.closeModal}\n          />\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n\nexport default School;\n","import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport firebase from './firebase.js';\nimport jump from 'jump.js';\nimport swal from 'sweetalert';\n\nimport School from './School.js';\n\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // input from search field\n      userInput: '',\n      // input for the type of school (college, university, trade school)\n      institution: '',\n      // specific id for more info about each school\n      selectSchoolId: '',\n      // return from the API\n      schoolsList: []\n    };\n  }\n\n  // calls the API\n  apiCall = () => {\n    axios\n      .get('https://api.foursquare.com/v2/venues/search', {\n        params: {\n          client_id: 'JYPGSEYBVO44BBH553GNVMI1OCUCDFTFZUS2H0X5JLMCMOVY',\n          client_secret: 'XBVDWZV2LUQS3RUWTMJJQVJMKZY5HACXHKCGT4ZXVHHXX5K3',\n          v: 20190601,\n          near: this.state.userInput,\n          categoryId: this.state.institution,\n          // 25 km centre of city search\n          radius: 25000,\n          // checkin method returns most popular places\n          intent: 'checkin',\n          // max number of results that can be returned from api\n          limit: 50\n        }\n      })\n      .then(result => {\n        // RegEx test to filter out undesirable items returned in search\n        const RegEx = /centre|center|park|building|pool|hall|office of le president|division of|department|campus|residence|faculty|campus|public|room/i;\n\n        // response returned from API\n        const schoolsList = result.data.response.venues;\n\n        // filter out only relevant information from the API using RegEx\n        const filteredList = schoolsList.filter(key => {\n          const name = key.categories[0].shortName;\n\n          return (\n            (name === 'University' || name === 'Community College' || name === 'Trade School') &&\n            !RegEx.test(key.name) &&\n            key.location.address !== undefined\n          );\n        });\n\n        this.setState({\n          schoolsList: filteredList\n        });\n      })\n      .catch(error => {\n        // error message if no results are returned\n        if (error.response.status === 400) {\n          this.setState({\n            schoolsList: `We're sorry. There are zero results for your search.`\n          });\n\n          // if the user ends up somehow making more 950 calls a day\n        } else if (error.response.status === 429) {\n          this.setState({\n            schoolsList:\n              'You have exceeded your daily limit of searches. You should probably go outside...'\n          });\n        }\n      });\n  };\n\n  // bookmark a school\n  setBookmarkState = id => {\n    // goes through the school list array to find the corresponding info of the selected ID and add to firebase\n    this.state.schoolsList.forEach(school => {\n      if (school.id === id) {\n        const dbRef = firebase.database().ref();\n        dbRef.push({\n          name: school.name,\n          address: school.location.address,\n          id: school.id,\n          category: school.categories[0].name\n        });\n      }\n    });\n  };\n\n  // handle change for form\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // handle submit of form\n  handleSubmit = e => {\n    // check if all fields are entered\n    if (this.state.institution.length === 0 || this.state.userInput.length === 0) {\n      swal({\n        title: 'oops',\n        text: 'please make sure all fields are entered',\n        icon: 'warning'\n      });\n    } else {\n      // RegEx test to make sure user can't submit a blank spaces as a search\n      if (/^\\s*$/.test(this.state.userInput) === false) {\n        this.apiCall();\n\n        jump('.schoolResults', {\n          duration: 1000,\n          offset: -50,\n          a11y: true\n        });\n      } else {\n        swal({\n          title: 'oops',\n          text: 'please enter a search',\n          icon: 'warning'\n        });\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"searchContainer\">\n          <form onSubmit={this.handleSubmit} className=\"searchForm wrapper\">\n            <div className=\"smallWrapper\">\n              <div className=\"instructions\">\n                <p>Search for a school near you!</p>\n                <p>(Select an Institution Type)</p>\n              </div>\n              <div className=\"radioButtons\">\n                <input\n                  type=\"radio\"\n                  name=\"institution\"\n                  id=\"university\"\n                  className=\"radioButtonDot\"\n                  value=\"4bf58dd8d48988d1ae941735\"\n                  onChange={this.handleChange}\n                  checked={this.state.institution === '4bf58dd8d48988d1ae941735'}\n                  tabIndex=\"4\"\n                />\n                <label className=\"radioButtonLabel\" htmlFor=\"university\">\n                  University\n                </label>\n\n                <input\n                  type=\"radio\"\n                  name=\"institution\"\n                  id=\"college\"\n                  className=\"radioButtonDot\"\n                  value=\"4bf58dd8d48988d1a2941735\"\n                  onChange={this.handleChange}\n                  checked={this.state.institution === '4bf58dd8d48988d1a2941735'}\n                  tabIndex=\"4\"\n                />\n                <label className=\"radioButtonLabel\" htmlFor=\"college\">\n                  College\n                </label>\n\n                <input\n                  type=\"radio\"\n                  name=\"institution\"\n                  id=\"trade\"\n                  className=\"radioButtonDot\"\n                  value=\"4bf58dd8d48988d1ad941735\"\n                  onChange={this.handleChange}\n                  checked={this.state.institution === '4bf58dd8d48988d1ad941735'}\n                  tabIndex=\"4\"\n                />\n                <label className=\"radioButtonLabel\" htmlFor=\"trade\">\n                  Trade School\n                </label>\n              </div>\n\n              <label className=\"userInputLabel\" htmlFor=\"search\">\n                Schools Near:\n              </label>\n              <input\n                className=\"userInput\"\n                type=\"text\"\n                name=\"userInput\"\n                id=\"search\"\n                onChange={this.handleChange}\n                value={this.state.userInput}\n                tabIndex=\"5\"\n                placeholder=\"enter a city\"\n              />\n\n              <label htmlFor=\"submit\" className=\"visuallyHidden\">\n                Submit Search\n              </label>\n              <input\n                className=\"generalButton\"\n                type=\"submit\"\n                id=\"submit\"\n                value=\"Get Schools List\"\n                tabIndex=\"6\"\n              />\n            </div>\n          </form>\n        </div>\n\n        {/* returned results from the api call */}\n        <School\n          schoolsList={this.state.schoolsList}\n          setBookmarkState={this.setBookmarkState}\n          userSelectSchoolId={this.userSelectSchoolId}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react'\nimport { NavLink } from 'react-router-dom';\n\nfunction Nav() {\n  return (\n    <header>\n        <nav className=\"nav\">\n          <div className=\"wrapper\">\n            <NavLink to=\"/\" className=\"navLink\" tabIndex='1'><h1>College Navigator</h1></NavLink>\n            <ul className=\"navList\">\n            <li className=\"navItem\"><NavLink to=\"/\" className=\"navLink\" tabIndex='2'>Search</NavLink></li>\n            <li className=\"navItem\"><NavLink to=\"/notes\" className=\"navLink\" tabIndex='3'>Bookmarks</NavLink></li>\n            </ul>\n            \n            <ul className=\"hiddenNavList\">\n            <li className=\"navItem\"><NavLink to=\"/\" className=\"navLink\" aria-label=\"search\" tabIndex='2'><i className=\"fas fa-search\"></i></NavLink></li>\n            <li className=\"navItem\"><NavLink to=\"/notes\" className=\"navLink\" tabIndex='3' aria-label=\"bookmarks\"><i className=\"fas fa-clipboard-list\"></i></NavLink></li>\n            </ul>\n          </div>\n        </nav>\n    </header>\n  )\n}\n\nexport default Nav\n","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport uuid from 'uuid';\nimport swal from 'sweetalert';\n\nclass AddSchool extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      // user inputs from the form fields\n      name: '',\n      address: '',\n      note: '',\n      category: '',\n      id: ''\n    };\n  }\n\n  // handle change for form change\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // handle submit of form\n  handleSubmit = e => {\n    this.setState({\n      // generated an ID from uuid for custom inputs so they match the saved schools from the api\n      id: uuid.v4()\n    });\n\n    // RegEx test to ensure search field isn't an empty string\n    if (\n      this.state.name !== '' &&\n      this.state.address !== '' &&\n      /^\\s*$/.test(this.state.name) === false &&\n      /^\\s*$/.test(this.state.address) === false &&\n      this.state.category !== ''\n    ) {\n      // push the added school to the database\n      const dbRef = firebase.database().ref();\n      dbRef.push(this.state);\n      this.setState({\n        name: '',\n        address: '',\n        note: '',\n        category: '',\n        id: ''\n      });\n    } else {\n      // alert when all fields aren't completed\n      swal({\n        title: 'oops',\n        text: 'please enter required fields',\n        icon: 'warning'\n      });\n    }\n\n    e.preventDefault();\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <form className=\"inputSchoolForm singleContent\" onSubmit={this.handleSubmit}>\n          <div className=\"inputFieldContainer\">\n            <label htmlFor=\"inputSchoolName\">Name of Institution:</label>\n            <input\n              type=\"text\"\n              placeholder=\"Name\"\n              id=\"inputSchoolName\"\n              className=\"inputSchoolName\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"inputFieldContainer\">\n            <label htmlFor=\"inputSchoolAddress\">Address:</label>\n            <input\n              type=\"text\"\n              placeholder=\"Address\"\n              id=\"inputSchoolAddress\"\n              className=\"inputSchoolAddress\"\n              name=\"address\"\n              value={this.state.address}\n              onChange={this.handleChange}\n            />\n          </div>\n          <fieldset className=\"inputFieldContainerRadio\">\n            <legend className=\"visuallyHidden\">Category:</legend>\n\n            <input\n              className=\"radioButtonDot\"\n              type=\"radio\"\n              name=\"category\"\n              id=\"radioButtonCollege\"\n              value=\"College\"\n              onChange={this.handleChange}\n              checked={this.state.category === 'College'}\n            />\n            <label htmlFor=\"radioButtonCollege\" className=\"radioButtonLabel\">\n              College\n            </label>\n            <input\n              className=\"radioButtonDot\"\n              type=\"radio\"\n              name=\"category\"\n              id=\"universityButtonCollege\"\n              value=\"University\"\n              onChange={this.handleChange}\n              checked={this.state.category === 'University'}\n            />\n            <label htmlFor=\"universityButtonCollege\" className=\"radioButtonLabel\">\n              University\n            </label>\n            <input\n              className=\"radioButtonDot\"\n              type=\"radio\"\n              name=\"category\"\n              id=\"radioButtonTrade\"\n              value=\"Trade School\"\n              onChange={this.handleChange}\n              checked={this.state.category === 'Trade School'}\n            />\n            <label htmlFor=\"radioButtonTrade\" className=\"radioButtonLabel\">\n              Trade School\n            </label>\n          </fieldset>\n\n          <div className=\"inputFieldContainer\">\n            <label htmlFor=\"inputSchoolNote\">Note (optional):</label>\n            <textarea\n              id=\"inputSchoolNote\"\n              placeholder=\"Note\"\n              className=\"inputSchoolNote\"\n              name=\"note\"\n              value={this.state.note}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <label htmlFor=\"inputSchoolSubmit\" className=\"visuallyHidden\">\n            Submit\n          </label>\n          <input\n            type=\"submit\"\n            id=\"inputSchoolSubmit\"\n            className=\"inputSchoolSubmit generalButton\"\n            value=\"Save\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddSchool;\n","import React, { Component } from 'react';\nimport firebase from './firebase.js';\nimport jump from 'jump.js';\nimport { CircleArrow as ScrollUpButton } from 'react-scroll-up-button';\n\nimport AddSchool from './AddSchool.js';\n\nclass Notes extends Component {\n  constructor() {\n    super();\n    this.focusHere = React.createRef();\n\n    this.state = {\n      // list of all bookmarked items in firebase\n      bookmarkList: [],\n      //  user items are the editable inputted data for each school in the form fields\n      userNote: '',\n      userName: '',\n      userAddress: '',\n      userCategory: '',\n\n      // class name toggle of modal status\n      modalOpen: 'close',\n      // the id of the selected school to be edited\n      selectedId: ''\n    };\n  }\n\n  componentDidUpdate() {\n    // sets focus to to the item\n    this.focusHere.current.focus();\n  }\n\n  componentDidMount() {\n    const dbRef = firebase.database().ref();\n    // pulls all data from firebase and listens for change\n    dbRef.on('value', response => {\n      const data = response.val();\n      const updateBookmark = [];\n      for (let item in data) {\n        updateBookmark.push({\n          key: item,\n          name: data[item].name,\n          address: data[item].address,\n          id: data[item].id,\n          note: data[item].note,\n          category: data[item].category\n        });\n      }\n      this.setState({\n        bookmarkList: updateBookmark\n      });\n    });\n  }\n\n  // handle change for form\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  // handle submit of form\n  handleSubmit = e => {\n    const dbRef = firebase.database().ref(this.state.selectedId);\n\n    // if the user inputs are not empty then write input into firebase at corresponding data node\n    if (this.state.userName !== '') {\n      dbRef.child('name').set(this.state.userName);\n    }\n    if (this.state.userAddress !== '') {\n      dbRef.child('address').set(this.state.userAddress);\n    }\n    if (this.state.userCategory !== '') {\n      dbRef.child('category').set(this.state.userCategory);\n    }\n    if (this.state.userNote !== '' && this.state.userNote !== undefined) {\n      dbRef.child('note').set(this.state.userNote);\n    }\n\n    // close the modal\n    this.closeModal();\n\n    // clears the inputs\n    this.setState({\n      userNote: '',\n      userAddress: '',\n      userName: '',\n      userCategory: ''\n    });\n\n    e.preventDefault();\n  };\n\n  // edit note function\n  editNote = key => {\n    // finds the note to the edited by it's key\n    const found = this.state.bookmarkList.find(item => item.key === key);\n\n    // opens the modal with the corresponding data in the form fields\n    this.setState({\n      modalOpen: 'open',\n      selectedId: key,\n      userName: found.name,\n      userAddress: found.address,\n      userNote: found.note,\n      userCategory: found.category\n    });\n  };\n\n  // remove note function from the database\n  removeBookmark = key => {\n    const dbRef = firebase.database().ref(key);\n    dbRef.remove();\n  };\n\n  // close modal\n  closeModal = () => {\n    this.setState({\n      modalOpen: 'close'\n    });\n  };\n\n  // jump scroll\n  handleScroll = () => {\n    jump('.inputSchoolForm', {\n      duration: 1000,\n      a11y: true\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"noteContainer\">\n        <div className=\"wrapper\">\n          <div className=\"bookmarks\">\n            <h2>BOOKMARKS</h2>\n          </div>\n          <button onClick={this.handleScroll} className=\"addSign\">\n            <i className=\"fas fa-plus\" aria-hidden=\"true\" />\n            <p>Add Institution</p>\n          </button>\n        </div>\n\n        <div className={`modalWrapper ${this.state.modalOpen}`}>\n          <div className=\"detailsOverlay\" />\n\n          <div className=\"detailsModal\">\n            {/* close modal button */}\n            <button onClick={this.closeModal} className=\"closeButton\">\n              <i className=\"fas fa-times\" aria-label=\"close modal\" />\n            </button>\n\n            <form action=\"\" className=\"editForm\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\">Name of Institution:</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"userName\"\n                onChange={this.handleChange}\n                value={this.state.userName}\n                ref={this.focusHere}\n              />\n\n              <label htmlFor=\"address\">Address:</label>\n              <input\n                type=\"text\"\n                id=\"address\"\n                name=\"userAddress\"\n                onChange={this.handleChange}\n                value={this.state.userAddress}\n              />\n\n              <fieldset className=\"inputFieldContainerRadio\">\n                <legend className=\"visuallyHidden\">Category:</legend>\n\n                <input\n                  className=\"radioButtonDot\"\n                  type=\"radio\"\n                  name=\"userCategory\"\n                  id=\"college\"\n                  value=\"College\"\n                  onChange={this.handleChange}\n                />\n                <label htmlFor=\"college\">College</label>\n                <input\n                  className=\"radioButtonDot\"\n                  type=\"radio\"\n                  name=\"userCategory\"\n                  id=\"university\"\n                  value=\"University\"\n                  onChange={this.handleChange}\n                />\n                <label htmlFor=\"university\">University</label>\n                <input\n                  className=\"radioButtonDot\"\n                  type=\"radio\"\n                  name=\"userCategory\"\n                  id=\"tradeSchool\"\n                  value=\"Trade School\"\n                  onChange={this.handleChange}\n                />\n                <label htmlFor=\"tradeSchool\">Trade School</label>\n              </fieldset>\n\n              <label htmlFor=\"addNote\">Add Note</label>\n              <textarea onChange={this.handleChange} value={this.state.userNote} name=\"userNote\" />\n\n              <input className=\"generalButton\" type=\"submit\" value=\"enter\" />\n            </form>\n          </div>\n        </div>\n        <ul className=\"notes wrapper\">\n          {this.state.bookmarkList.map(item => {\n            return (\n              <li key={item.key} className=\"singleNote singleContent\" tabIndex=\"0\">\n                <div className=\"textWrapper\">\n                  <p className=\"schoolName\">Institution: {item.name}</p>\n                  <p className=\"address\"> Address: {item.address}</p>\n                  <p className=\"category\">Category: {item.category}</p>\n                  <p className=\"note\"> Note: {item.note}</p>\n                </div>\n\n                <button\n                  className=\"generalButton\"\n                  onClick={() => {\n                    this.editNote(item.key);\n                  }}\n                >\n                  <i className=\"fas fa-pen\" aria-hidden=\"true\" />Edit\n                </button>\n\n                <button\n                  className=\"generalButton\"\n                  onClick={() => {\n                    this.removeBookmark(item.key);\n                  }}\n                >\n                  <i className=\"fas fa-trash-alt\" aria-hidden=\"true\" />Delete\n                </button>\n              </li>\n            );\n          })}\n\n          <ScrollUpButton\n            AnimationDuration={500}\n            ShowAtPosition={350}\n            style={{\n              fill: `#073330`,\n              height: 30,\n              width: 30,\n              right: 15,\n              border: `3px solid #073330`,\n              background: `rgba(255, 255, 255, 0.848)`\n            }}\n          />\n        </ul>\n\n        <AddSchool />\n      </div>\n    );\n  }\n}\n\nexport default Notes;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer>\n      <p>\n        Powered! by{' '}\n        <a href=\"https://developer.foursquare.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Foursquare API\n        </a>\n      </p>\n      <p>Made by Andrew, David, Frankie and Jasmine</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from 'react'\nimport { HashRouter, Route } from 'react-router-dom';\nimport './styles/style.scss';\n\n// imported components\nimport Search from './components/Search.js';\nimport Nav from './components/Nav.js';\nimport Notes from './components/Notes.js';\nimport Footer from \"./components/Footer\"\n\nclass App extends Component {\n\n  render() {\n    return (\n      // hashrouter for gh-pages\n      <HashRouter>\n        <Nav />\n        <Route exact path=\"/\" component={Search} />\n        <Route path='/notes' component={Notes} />\n        <Footer />\n      </HashRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}